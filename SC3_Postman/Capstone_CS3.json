{
	"info": {
		"_postman_id": "adfae7f2-a31f-4cde-b413-690012eeb80b",
		"name": "Capstone_CS3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31036312"
	},
	"item": [
		{
			"name": "getCurrency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Positive Test Scenarios\r",
							"\r",
							"// 1. Verify Status Code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2. Verify Country Name is \"Bhutan\"\r",
							"pm.test(\"Country name is Bhutan\", function () {\r",
							"    const countryName = pm.response.json()[0].name.common;\r",
							"    pm.expect(countryName).to.equal(\"Bhutan\");\r",
							"});\r",
							"\r",
							"// 3. Verify Capital is \"Thimphu\"\r",
							"pm.test(\"Capital is Thimphu\", function () {\r",
							"    const capital = pm.response.json()[0].capital[0];\r",
							"    pm.expect(capital).to.equal(\"Thimphu\");\r",
							"});\r",
							"\r",
							"// 4. Verify Currency is \"Bhutanese ngultrum\" with Symbol \"Nu.\"\r",
							"pm.test(\"Currency is Bhutanese ngultrum with symbol Nu.\", function () {\r",
							"    const currencyName = pm.response.json()[0].currencies.BTN.name;\r",
							"    const currencySymbol = pm.response.json()[0].currencies.BTN.symbol;\r",
							"\r",
							"    pm.expect(currencyName).to.equal(\"Bhutanese ngultrum\");\r",
							"    pm.expect(currencySymbol).to.equal(\"Nu.\");\r",
							"});\r",
							"\r",
							"// 5. Verify Region is \"Asia\"\r",
							"pm.test(\"Region is Asia\", function () {\r",
							"    const region = pm.response.json()[0].region;\r",
							"    pm.expect(region).to.equal(\"Asia\");\r",
							"});\r",
							"\r",
							"// 6. Verify Population is a Number\r",
							"pm.test(\"Population is a number\", function () {\r",
							"    const population = pm.response.json()[0].population;\r",
							"    pm.expect(population).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"// 7. Verify Gini Index is a Number\r",
							"pm.test(\"Gini index is a number\", function () {\r",
							"    const giniIndex = pm.response.json()[0].gini[\"2017\"];\r",
							"    pm.expect(giniIndex).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"// 8. Verify Timezone is UTC+06:00\r",
							"pm.test(\"Timezone is UTC+06:00\", function () {\r",
							"    const timezone = pm.response.json()[0].timezones[0];\r",
							"    pm.expect(timezone).to.equal(\"UTC+06:00\");\r",
							"});\r",
							"\r",
							"// Negative Test Scenarios\r",
							"\r",
							"// 1. Verify Status Code is 404 for Invalid Endpoint\r",
							"pm.test(\"Status code is 404 for invalid endpoint\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// 2. Verify Status Code is 404 for Non-existent Currency - \"XYZ\"\r",
							"pm.test(\"Status code is 404 for non-existent currency XYZ\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// 3. Verify Response Body is Empty for Invalid Currency - \"123\"\r",
							"pm.test(\"Response body is empty for invalid currency 123\", function () {\r",
							"    pm.response.to.not.have.jsonBody();\r",
							"});\r",
							"\r",
							"// 4. Verify Status Code is 404 for Missing Currency Parameter\r",
							"pm.test(\"Status code is 404 for missing currency parameter\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// 5. Verify Status Code is 404 for Special Characters in Currency - \"#$%\"\r",
							"pm.test(\"Status code is 404 for special characters in currency #$%\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// 6. Verify Flag URL is Present\r",
							"pm.test(\"Flag URL is present\", function () {\r",
							"    const flagURL = pm.response.json()[0].flags.png;\r",
							"    pm.expect(flagURL).to.not.be.empty;\r",
							"});\r",
							"\r",
							"// 7. Verify Area is a Number\r",
							"pm.test(\"Area is a number\", function () {\r",
							"    const area = pm.response.json()[0].area;\r",
							"    pm.expect(area).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"// 8. Verify Borders Array is Present\r",
							"pm.test(\"Borders array is present\", function () {\r",
							"    const borders = pm.response.json()[0].borders;\r",
							"    pm.expect(borders).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restcountries.com/v3.1/currency/inr",
					"protocol": "https",
					"host": [
						"restcountries",
						"com"
					],
					"path": [
						"v3.1",
						"currency",
						"inr"
					]
				}
			},
			"response": []
		}
	]
}